// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.943
package js

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

var jsHandle = templ.NewOnceHandle()

func GoasterJS() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<script type=\"text/javascript\" nonce=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var3 string
			templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(templ.GetNonce(ctx))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `components/js/script.templ`, Line: 7, Col: 60}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "\">\n    /* [tempo] BEGIN - Do not edit! This section is auto-generated. */\nconst DIRECTION_TOP=\"top\",DIRECTION_BOTTOM=\"bottom\";function initGoaster({dismissTimer=3e3,removeDuration=500}={}){return{dismissTimer,removeDuration}}function removeShowClasses(element){const showClasses=[\"gttShow\",\"gttShowFromTop\",\"gttShowFromBottom\"];element.classList.remove(...showClasses)}function performExitAnimationAndRemove(element,animated,positionName,duration=500){const classesToAdd=[\"gttClose\"];animated&&classesToAdd.push(positionName.startsWith(DIRECTION_TOP)?\"gttCloseFromTop\":\"gttCloseFromBottom\"),element.classList.add(...classesToAdd),removeShowClasses(element),setTimeout(()=>element.remove(),duration)}function animateProgressBar(element,duration=3e3){const progressBarElement=element.querySelector(\".gttProgressBar\");progressBarElement&&(progressBarElement.style.transition=`width ${duration}ms linear`,progressBarElement.style.width=\"100%\",requestAnimationFrame(()=>{progressBarElement.style.width=\"0%\"}))}const handleAutoDismiss={init(isWithProgressBar,dismissTimer,removeDuration){document.querySelectorAll('.gttToast[role=\"alert\"][data-auto-dismiss=\"true\"]').forEach(toast=>{isWithProgressBar&&animateProgressBar(toast,dismissTimer),toast.dataset.dismissTimer=setTimeout(()=>{performExitAnimationAndRemove(toast,toast.dataset.animation===\"true\",toast.dataset.position,removeDuration)},dismissTimer)})}};function closeToast(e){e.stopPropagation();const toast=e.target.closest('.gttToast[role=\"alert\"]');toast&&(clearTimeout(Number(toast.dataset.dismissTimer)),performExitAnimationAndRemove(toast,toast.dataset.animation===\"true\",toast.dataset.position))}document.body.addEventListener(\"click\",e=>{e.target.closest(\".gttCloseBtn\")&&closeToast(e)}),document.addEventListener(\"DOMContentLoaded\",()=>{document.querySelectorAll('.gttToast[data-auto-dismiss=\"true\"]').forEach(el=>{const{dismissTimer,removeDuration}=initGoaster({dismissTimer:Number(el.dataset.dismissTimer)||void 0,removeDuration:Number(el.dataset.removeDuration)||void 0}),hasProgressBar=!!el.querySelector(\".gttProgressBar\");handleAutoDismiss.init(hasProgressBar,dismissTimer,removeDuration)})});\n\n/* [tempo] END */\n    </script>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = jsHandle.Once().Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
